# Generated by Django 5.0.6 on 2024-06-29 15:33

import django.db.models.deletion
import lernspiel_server.db
import ls_games_core.models.shared
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='GameComponentMeta',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Id')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Game Variant',
                'verbose_name_plural': 'Game Variants',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='ls_games_co_name_b8191f_idx')],
            },
            bases=(models.Model, lernspiel_server.db.CreatedModifiedByMixin),
        ),
        migrations.CreateModel(
            name='MediaFile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Id')),
                ('object_id', models.UUIDField()),
                ('file_data', models.FileField(upload_to=ls_games_core.models.shared.AbstractFileModel._calc_file_path, verbose_name='File Data')),
                ('file_name', models.CharField(max_length=255, verbose_name='File Name')),
                ('file_size', models.PositiveIntegerField(verbose_name='File Size')),
                ('mime_type', models.CharField(max_length=64, verbose_name='MIME Type')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Media File',
                'verbose_name_plural': 'Media Files',
                'ordering': ['content_type', 'object_id', 'file_name'],
                'abstract': False,
                'indexes': [models.Index(fields=['content_type', 'object_id', 'file_name'], name='ls_games_co_content_f98ddb_idx')],
            },
            bases=(models.Model, lernspiel_server.db.CreatedModifiedByMixin),
        ),
        migrations.CreateModel(
            name='SourceFile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Id')),
                ('object_id', models.UUIDField()),
                ('file_data', models.FileField(upload_to=ls_games_core.models.shared.AbstractFileModel._calc_file_path, verbose_name='File Data')),
                ('file_name', models.CharField(max_length=255, verbose_name='File Name')),
                ('file_size', models.PositiveIntegerField(verbose_name='File Size')),
                ('mime_type', models.CharField(max_length=64, verbose_name='MIME Type')),
                ('source_type', models.SmallIntegerField(choices=[(1, 'HTML Template'), (2, 'CSS Stylesheet'), (3, 'JS Source File'), (4, 'Game Script')], verbose_name='Source Type')),
                ('sort_order', models.SmallIntegerField(verbose_name='Sort Order')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Source File',
                'verbose_name_plural': 'Source Files',
                'ordering': ['content_type', 'object_id', 'source_type', 'sort_order'],
                'abstract': False,
                'indexes': [models.Index(fields=['content_type', 'object_id', 'file_name'], name='ls_games_co_content_444eb3_idx'), models.Index(fields=['content_type', 'object_id', 'source_type', 'sort_order'], name='ls_games_co_content_e1790d_idx')],
            },
            bases=(models.Model, lernspiel_server.db.CreatedModifiedByMixin),
        ),
    ]
